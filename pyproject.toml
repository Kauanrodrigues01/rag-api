[project]
name = "rag-api-portfolio"
version = "0.1.0"
description = ""
authors = [
    {name = "Kauanrodrigues01",email = "kauanrl09@gmail.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10,<=3.14"
dependencies = [
    "fastapi (>=0.115.14,<0.116.0)",
    "uvicorn (>=0.35.0,<0.36.0)",
    "python-multipart (>=0.0.20,<0.0.21)",
    "langchain (>=0.3.26,<0.4.0)",
    "langchain-community (>=0.3.27,<0.4.0)",
    "langchain-openai (>=0.3.27,<0.4.0)",
    "langchain-chroma (>=0.2.4,<0.3.0)",
    "pypdf (>=5.7.0,<6.0.0)",
    "pydantic-settings (>=2.10.1,<3.0.0)",
    "sqlalchemy (>=2.0.41,<3.0.0)",
    "alembic (>=1.16.2,<2.0.0)",
    "asyncpg (>=0.30.0,<0.31.0)",
    "psycopg2-binary (>=2.9.10,<3.0.0)",
    "jinja2 (>=3.1.6,<4.0.0)"
]


[tool.poetry]
package-mode = false

[tool.poetry.group.dev.dependencies]
ruff = "^0.12.2"
taskipy = "^1.14.1"
pytest = "^8.4.1"
pytest-cov = "^6.2.1"
pytest-asyncio = "^1.0.0"
pytest-mock = "^3.14.1"
fpdf = "^1.7.2"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 79
extend-exclude = ['migrations']

[tool.ruff.lint]
preview = true
select = ['I', 'F', 'E', 'W', 'PL', 'PT']
ignore = ['E501', 'PLR2004']  # Ignora o erro de linha muito longa

[tool.ruff.format]
preview = true
quote-style = 'single'

[tool.pytest.ini_options]
pythonpath = "."
addopts = '-p no:warnings'

[tool.coverage.run]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__pycache__/*",
    "*/conftest.py",
    "*/__init__.py",
]

[tool.taskipy.tasks]
lint = 'ruff check .'
format = 'ruff check --fix'
run = 'uvicorn app.main:app --reload --port 8000'
test = 'pytest -s --cov=. -vv'
post_test = 'coverage html'